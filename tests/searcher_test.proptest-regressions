# Seeds for failure cases proptest has generated in the past. It is
# automatically read and these particular cases re-run before any
# novel cases are generated.
#
# It is recommended to check this file in to source control so that
# everyone who runs the test benefits from these saved cases.
cc 4c4c69ffd4ee4dc148caaafa6b60d08fc9ee5e455d1f9d92a83f82e964fc819c # shrinks to (mut board, mating_move) = (Board { bitboards: PieceMap({White: {King: Bitboard(10000), Queen: Bitboard(10000000000000000000000000000000000000000000000000000000), Rook: Bitboard(10000001), Bishop: Bitboard(100), Knight: Bitboard(100000000000000000000000000000000010000000000000), Pawn: Bitboard(10000000001000000100000000001101000100000000000)}, Black: {King: Bitboard(100000000000000000000000000000000000000000000000000000000000), Queen: Bitboard(1000000000000000000000000000000000), Rook: Bitboard(100000000000000000000000000000000000000000000000000000000), Bishop: Bitboard(10000000000000000000010000000000000000000000000000000000000000), Knight: Bitboard(100001000000000000000000000000000000000000000000000000000000000), Pawn: Bitboard(1000000000110000000010110000001000000000000000000000000)}}), player: Black, pieces: SquareMap([Some(Piece::WR), None, Some(Piece::WB), None, Some(Piece::WK), None, None, Some(Piece::WR), None, None, None, Some(Piece::WP), None, Some(Piece::WN), None, Some(Piece::WP), None, Some(Piece::WP), Some(Piece::WP), None, None, None, None, None, Some(Piece::BP), None, None, None, None, Some(Piece::WP), None, Some(Piece::BP), Some(Piece::BP), Some(Piece::BQ), Some(Piece::BP), None, Some(Piece::WP), None, None, None, Some(Piece::BB), None, None, Some(Piece::BP), Some(Piece::BP), None, Some(Piece::WP), Some(Piece::WN), None, None, None, None, None, None, Some(Piece::BP), Some(Piece::WQ), Some(Piece::BR), Some(Piece::BN), None, Some(Piece::BK), None, Some(Piece::BB), Some(Piece::BN), None]), piece_count: PieceMap({White: {King: 1, Queen: 1, Rook: 2, Bishop: 1, Knight: 2, Pawn: 7}, Black: {King: 1, Queen: 1, Rook: 1, Bishop: 2, Knight: 2, Pawn: 7}}), occupancy_player: {White: Bitboard(10000000110000000001000000100000000001101010100010010101), Black: Bitboard(110101101000000000110010000011110000001000000000000000000000000)}, occupancy: Bitboard(110101111000000110110010001011110100001000001101010100010010101), board_states: [BoardState { captured_piece_type: None }, BoardState { captured_piece_type: None }, BoardState { captured_piece_type: None }, BoardState { captured_piece_type: None }, BoardState { captured_piece_type: None }, BoardState { captured_piece_type: None }, BoardState { captured_piece_type: None }, BoardState { captured_piece_type: None }, BoardState { captured_piece_type: None }, BoardState { captured_piece_type: None }, BoardState { captured_piece_type: None }, BoardState { captured_piece_type: None }, BoardState { captured_piece_type: None }, BoardState { captured_piece_type: None }, BoardState { captured_piece_type: Some(Pawn) }, BoardState { captured_piece_type: None }, BoardState { captured_piece_type: None }, BoardState { captured_piece_type: None }, BoardState { captured_piece_type: None }, BoardState { captured_piece_type: None }, BoardState { captured_piece_type: None }, BoardState { captured_piece_type: Some(Pawn) }, BoardState { captured_piece_type: None }, BoardState { captured_piece_type: None }, BoardState { captured_piece_type: None }, BoardState { captured_piece_type: None }, BoardState { captured_piece_type: None }, BoardState { captured_piece_type: None }, BoardState { captured_piece_type: None }, BoardState { captured_piece_type: Some(Bishop) }, BoardState { captured_piece_type: None }, BoardState { captured_piece_type: None }, BoardState { captured_piece_type: None }, BoardState { captured_piece_type: None }, BoardState { captured_piece_type: None }, BoardState { captured_piece_type: None }, BoardState { captured_piece_type: None }, BoardState { captured_piece_type: None }, BoardState { captured_piece_type: None }, BoardState { captured_piece_type: None }, BoardState { captured_piece_type: Some(Rook) }, BoardState { captured_piece_type: None }, BoardState { captured_piece_type: None }, BoardState { captured_piece_type: None }, BoardState { captured_piece_type: None }, BoardState { captured_piece_type: None }, BoardState { captured_piece_type: None }, BoardState { captured_piece_type: None }, BoardState { captured_piece_type: None }, BoardState { captured_piece_type: None }, BoardState { captured_piece_type: None }] }, Move { from: B5, to: E2, promoting: None })
